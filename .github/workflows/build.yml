name: Build and publish
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/latest'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        ARCH: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-musl, mips-unknown-linux-musl, mipsel-unknown-linux-musl, x86_64-pc-windows-gnu ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set variables
        run: echo "VERSION=`cat .github/latest`" >> $GITHUB_ENV
      - name: Download upstream code
        run: curl -sL https://api.github.com/repos/geph-official/geph4/tarball/refs/tags/${{ env.VERSION }} | tar xvz
      - name: Get source folder
        run: echo "GEPH=`ls | grep geph-official-geph4-`" >> $GITHUB_ENV
      - name: Patch upstream code
        run: git apply --directory=${{ env.GEPH }} .github/cross.patch
      - name: Download rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.ARCH }}
          override: true
      - name: Cross compile
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: '--release --locked --target ${{ matrix.ARCH }} --manifest-path=${{ env.GEPH }}/Cargo.toml'
        env:
          CC: clang
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: geph4-client-${{ matrix.ARCH }}
          path: ${{ env.GEPH }}/target/${{ matrix.ARCH }}/release/geph4-client
  release:
    runs-on: ubuntu-latest
    if: always()
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set variables
        run: echo "VERSION=`cat .github/latest`" >> $GITHUB_ENV
      - name: Download artifact
        uses: actions/download-artifact@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.VERSION }}
          files: geph4-client-*/geph4-client-*
